<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>hello-spark-playground</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>QuickStart</module>
        <module>RDDProgrammingGuide</module>
        <module>SparkSQLProgrammingGuide</module>
        <module>MLlib</module>
        <module>XGBoost</module>
        <module>SparkAndHDFS</module>
        <module>sparK-and-other-tool</module>
        <module>spark-demo-common</module>
    </modules>

    <properties>
        <scala.binary.version>2.12</scala.binary.version>
        <scala.version>2.12.12</scala.version>
        <spark.version>2.4.6</spark.version>
        <jdk.version>1.8</jdk.version>
        <scala.maven.plugin.version>3.4.6</scala.maven.plugin.version>
    </properties>

    <dependencies>
        <!--        进行了一定的更改，原本需要idea手动为project导入一个scala作为编译环境，现在改为利用maven插件scala-maven-plugin来导入scala编译器-->
        <!--        当pom中只有这个插件的时候，project里会有一个单独的scala-lang这个依赖，因此scala-maven-plugin这个插件的原理与手动导入的原理相同-->
        <!--        但是下面这些spark依赖也会导入相应的scala-lang依赖，会将scala-maven-plugin导入的scala-lang覆盖掉，但这些spark依赖带来的scala-lang不会作为编译环境使用，因此要做exclusion-->
        <!--                   不过后面那个插件编译器和idea的集成不太好，有时候难以保证scala-lang由最后的plugin提供，有时候无法被idea识别为编译器 最靠谱的方法是手动添加-->
        <!--                不识别的解决方案包括重新导入、将由其他spark提供的scala-lang给exclude掉-->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--        &lt;!&ndash; https://mvnrepository.com/artifact/org.scala-lang/scala-library &ndash;&gt;-->
        <!--        <dependency>-->
        <!--            <groupId>org.scala-lang</groupId>-->
        <!--            <artifactId>scala-library</artifactId>-->
        <!--            <version>${scala.version}</version>-->
        <!--        </dependency>-->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.11</version>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.example</groupId>
                <artifactId>spark-demo-common</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scala.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile-first</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach-scaladocs</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>doc-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <scalaVersion>${scala.version}</scalaVersion>
                    <recompileMode>incremental</recompileMode>
                    <useZincServer>true</useZincServer>
                    <args>
                        <arg>-unchecked</arg>
                        <arg>-deprecation</arg>
                        <arg>-feature</arg>
                    </args>
                    <javacArgs>
                        <javacArg>-source</javacArg>
                        <javacArg>${java.version}</javacArg>
                        <javacArg>-target</javacArg>
                        <javacArg>${java.version}</javacArg>
                    </javacArgs>
                </configuration>
            </plugin>
        </plugins>

    </build>

</project>
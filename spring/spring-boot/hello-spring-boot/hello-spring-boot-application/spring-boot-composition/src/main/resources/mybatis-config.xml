<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <settings>
        <setting name="useColumnLabel" value="true"/>
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--        指定mybatis的logger-->
        <!--        之所以能用，是因为我在hello-spring-log-starter里定义了一个name叫做mybatis1的logger-->
        <!--        也挺trick的-->
        <setting name="logPrefix" value="mybatis1."/>
<!--        或者手动撸出来一个log，思路是新建一个类，就是某个logger的代理，然后配置在这里-->
<!--        可以上网搜mybatis自定义日志实现-->
        <!--        <setting name="logImpl" value="SLF4J"/>-->

    </settings>

    <typeAliases>
        <package name="com.example.springboot.hellospringboot.domain.pojo"/>
    </typeAliases>

    <!--    如果通过下面这种配置来生成mapper是不会生效的，无论是package还是resource，不知道为啥，老老实实用mapperscan注解吧-->
    <!--    <mappers>-->
    <!--        <mapper resource="mappers/mbg/CustomerMapper.xml"/>-->
    <!--        <mapper resource="mappers/mbg/ItemMapper.xml"/>-->
    <!--    </mappers>-->

    <!--    mybatis的配置前后顺序不能颠倒-->
    <!--    <plugins>-->
    <!--          mybatis-pageHelper 如果使用的是starter 则不需要配置这里，直接在yml修改配置就好了 详见https://github.com/pagehelper/pagehelper-spring-boot-->
    <!--        <plugin interceptor="com.github.pagehelper.PageInterceptor"/>-->
    <!--    </plugins>-->
</configuration>
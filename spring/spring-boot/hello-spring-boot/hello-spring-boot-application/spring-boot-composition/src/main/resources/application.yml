server:
  port: 80

# 配合mybatis的logPrefix使用打印mybatis日志的另一种方式
# 很神奇的是，即使我配置的root这个logger的level是info了，但是mybatis的log仍然能打印出来debug结果；
# 日志打印位置 BaseJdbcLogger这个类之中；猜测是做了什么奇怪的操作吧。由于太trick，所以我不想用
#logging:
#  level:
#    mybatis: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: beans,trace,health # 可以通过http://localhost/actuator/beans查看bean
spring:
  application:
    name: spring-boot-composition
  jdbc:
    datasource:
      druid:
        yiibai:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://localhost:3306/yiibaidb
          username: root
          password: root
  datasource:
    redis:
      host: 127.0.0.1
      port: 6379
      password: admin
  ####consul注册中心地址
  cloud:
    #### nacos注册中心地址
    nacos:
      discovery:
        server-addr: localhost:8848
      ## 使用spring loadbalancer，弃用ribbon  不写这个会报错 还会用ribbon
      loadbalancer:
        ribbon:
          enabled: false
#    consul:
#      host: localhost
#      port: 8500
#      discovery:
#        #hostname: 127.0.0.1
#        service-name: ${spring.application.name}
#        register: true
#        deregister: true
#        prefer-ip-address: true
#        health-check-path: /web/health/health
#        health-check-interval: 10s
#        health-check-critical-timeout: 7200s

## 使用spring loadbalancer，弃用ribbon  不写这个会报错 还会用ribbon
ribbon:
  nacos:
    enabled: false

hello-world: Hello World!
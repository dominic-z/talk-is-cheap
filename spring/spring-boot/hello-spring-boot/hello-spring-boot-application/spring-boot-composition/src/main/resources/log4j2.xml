<?xml version="1.0" encoding="UTF-8"?>
<!--status用来指定log4j本身的打印日志的级别.
monitorinterval为log4j 2.x新特点自动重载配置。指定自动重新配置的监测间隔时间，单位是s,最小是5s。-->
<configuration status="warn">
    <!--先定义所有的appender -->
    <appenders>
        <!--这个输出控制台的配置 -->
        <Console name="DETAIL" target="SYSTEM_OUT">
            <!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
            <!--             控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--             这个都知道是输出日志的格式 -->
            <PatternLayout
                    pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight{%-10level}{FATAL=red, ERROR=red, WARN=yellow, INFO=cyan, DEBUG=cyan,TRACE=blue} %style{%-20pid}{blue} --- [%-10thread] %-10class{1} %.10location %.10method : %msg%xThrowable%n"/>
        </Console>

        <Console name="CONSOLE" target="SYSTEM_OUT">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout
                    pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%highlight{%-5level}{FATAL=red, ERROR=red, WARN=yellow, INFO=cyan, DEBUG=cyan,TRACE=blue}] %style{%-5pid}{blue} --- [%.10thread] %-10class{1} : %msg%xThrowable%n"/>
        </Console>

        <Console name="SQL_CONSOLE" target="SYSTEM_OUT">
<!--            只打印sql语句-->
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout
                    pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%highlight{%-5level}{FATAL=red, ERROR=red, WARN=yellow, INFO=cyan, DEBUG=cyan,TRACE=blue}] %style{%-5pid}{blue} --- [%.10thread] %-10class{1} : %msg%xThrowable%n"/>
        </Console>

        <File name="SQL_LOG_FILE" fileName="logs/sql.log" append="false">
            <!--            只打印sql语句-->
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout
                    pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] %-5pid --- [%.10thread] %-10class{1} : %msg%xEx%n"/>
        </File>



        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用 -->
        <!--append为TRUE表示消息增加到指定文件中，false表示消息覆盖指定的文件内容，默认值是true -->
        <File name="LOG_FILE" fileName="logs/root.log" append="false">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout
                    pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] %-5pid --- [%.10thread] %-10class{1} : %msg%xEx%n"/>
        </File>

        <!--添加过滤器ThresholdFilter,可以有选择的输出某个级别以上的类别  onMatch="ACCEPT" onMismatch="DENY"意思是匹配就接受,否则直接拒绝  -->
        <File name="ERROR_FILE" fileName="logs/error.log" append="false">
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout
                    pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] %-5pid --- [%.10thread] %-10class{1} : %msg%xEx%n"/>
        </File>

        <!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
        <RollingFile name="ROLLING_FILE" fileName="logs/rolling.log"  append="false"
                     filePattern="logs/$${date:yyyy-MM}/web-%d{MM-dd-yyyy}-%i.log.gz">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout
                    pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] %-5pid --- [%.10thread] %-10class{1} : %msg%xThrowable%n"/>
            <SizeBasedTriggeringPolicy size="10MB"/>
        </RollingFile>
    </appenders>


    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
    <loggers>

        <!--        下面控制的是root的logger-->
        <root level="trace">
            <AppenderRef ref="CONSOLE"/>
            <AppenderRef ref="ROLLING_FILE"/>
            <AppenderRef ref="LOG_FILE"/>
            <AppenderRef ref="ERROR_FILE"/>
        </root>


        <Logger name="mybatis.mapper" level="trace">
            <AppenderRef ref="SQL_CONSOLE"/>
            <AppenderRef ref="SQL_LOG_FILE"/>
        </Logger>


        <Logger name="com.example.springboot.hellospringboot.dao.mybatis.mbg" level="trace">
            <AppenderRef ref="SQL_CONSOLE"/>
            <AppenderRef ref="SQL_LOG_FILE"/>
        </Logger>


    </loggers>
</configuration>